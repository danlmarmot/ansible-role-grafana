---
# Installs grafana

- name: Starting grafana role
  debug:
    msg: "{{ lookup('pipe','date') }}"

# Look for the shared_folder variable for Vagrant-based installs
- name: Look for Vagrant shared folder
  stat: path=/home/vagrant/shared/installers/
  register: shared_folder

- name: Default to installing grafana
  set_fact:
    grafana_install_flag: true

- name: Get current grafana version
  shell: grafana-server -v | egrep -o '[0-9]+\.[0-9]+\.[0-9]+' | head -1
  register: grafana_version_cmd
  ignore_errors: yes
  changed_when: false

- name: Set grafana_install_flag to false if version is already installed
  set_fact:
    grafana_install_flag: false
  when: grafana_version_cmd.rc == 0 and (grafana_pkg_version == grafana_version_cmd.stdout)

- name: Look for existing grafana Ubuntu repository
  stat: path="/etc/apt/sources.list.d/packages_elastic_co_grafana_2_2_debian.list"
  register: grafana_repo_file
  when: grafana_install_flag == true

- name: Add grafana repository, as needed (yes, it's debian)
  apt_repository:
    repo: "deb https://packagecloud.io/grafana/stable/debian/ wheezy main"
  when: grafana_install_flag == true and grafana_repo_file.stat.exists == false

- name: Add grafana gpg key
  apt_key:
    url: https://packagecloud.io/gpg.key
    state: present
  when: grafana_install_flag == true

- name: Update apt-cache if older than two hours
  apt:
    update_cache: yes
    cache_valid_time: 7200
  when: grafana_install_flag == true

# For Vagrant-managed environments
- include: install-from-shared-dir.yml
  when: shared_folder.stat.exists and grafana_install_flag == true and "vagrant_managed" in group_names

- name: Install grafana
  apt:
    pkg: "{{ item }}"
    state: installed
    force: yes
  with_items:
    - grafana
  when: grafana_install_flag == true

- name: Finished with grafana role
  debug:
    msg: "{{ lookup('pipe','date') }}"